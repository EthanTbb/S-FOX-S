#ifndef GAME_LOGIC_HEAD_FILE
#define GAME_LOGIC_HEAD_FILE

#pragma once

#include "Stdafx.h"

//////////////////////////////////////////////////////////////////////////
//牌型

//数值掩码
#define LOGIC_MASK_COLOR      0xF0                //花色掩码
#define LOGIC_MASK_VALUE      0x0F                //数值掩码

//排序类型
#define ST_VALUE          1                 //数值排序
#define ST_NEW              3                 //数值排序
#define ST_LOGIC          2                 //逻辑排序

//扑克数目
#define CARD_COUNT          32                  //扑克数目
//////////////////////////////////////////////////////////////////////////

//游戏逻辑
class CGameLogic
{
  //变量定义
private:
  static  BYTE        m_cbCardListData[172-4];    //扑克定义

  //函数定义
public:
  //构造函数
  CGameLogic();
  //析构函数
  virtual ~CGameLogic();

  //类型函数
public:
  //获取数值
  BYTE GetCardValue(BYTE cbCardData)
  {
    return cbCardData&LOGIC_MASK_VALUE;
  }
  //获取花色
  BYTE GetCardColor(BYTE cbCardData)
  {
    return (cbCardData&LOGIC_MASK_COLOR)>>4;
  }

  //控制函数
public:
  //混乱数组
  void RandArray(INT nArrayOne[], INT nCountOne, INT nArrayTwo[], INT nCountTwo);
  //混乱扑克
  void RandCardList(BYTE cbCardBuffer[], BYTE cbBufferCount);
  //排列扑克
  void SortCardList(BYTE cbCardData[], BYTE cbCardCount, BYTE cbSortType);
  //乱序数组
  void RandListArray(BYTE cbBuffer[], BYTE cbBufferCount, bool conflict);

  //逻辑函数
public:
  //获取牌点
  BYTE GetCardListPip(const BYTE cbCardData[], BYTE cbCardCount);
  //获取牌型
  BYTE GetCardType(const BYTE cbCardData, BYTE cbCardCount,BYTE *bcOutCadData = NULL);
  //大小比较
  int CompareCard(const BYTE cbFirstCardData[], BYTE cbFirstCardCount,const BYTE cbNextCardData[], BYTE cbNextCardCount,BYTE &Multiple);
  //逻辑大小
  BYTE GetCardLogicValue(BYTE cbCardData);

  BYTE GetCardNewValue(BYTE cbCardData);
};

//////////////////////////////////////////////////////////////////////////

#endif
